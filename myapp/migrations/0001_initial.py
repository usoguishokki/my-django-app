# Generated by Django 4.2.14 on 2025-03-31 08:33

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone

def set_initial_password(apps, schema_editor):
    Member_tb = apps.get_model('myapp', 'Member_tb')
    for member in Member_tb.objects.all():
        member.password = member.member_id
        member.save()
        
class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Shift_pattern_worker_view',
            fields=[
                ('shift_pattern_name', models.CharField(max_length=10, primary_key=True, serialize=False, verbose_name='shift_pattern_name')),
                ('shift_start_time', models.TimeField(null=True, verbose_name='shift_start_time')),
                ('shift_end_time', models.TimeField(null=True, verbose_name='shift_end_time')),
                ('shift_lunch_time_start', models.TimeField(null=True, verbose_name='shift_lunch_time_start')),
                ('shift_lunch_time_end', models.TimeField(null=True, verbose_name='shift_lunch_time_end')),
                ('hot_time_start_a', models.TimeField(null=True, verbose_name='hot_time_start_a')),
                ('hot_time_end_a', models.TimeField(null=True, verbose_name='hot_time_end_a')),
                ('hot_time_start_b', models.TimeField(null=True, verbose_name='hot_time_start_b')),
                ('hot_time_end_b', models.TimeField(null=True, verbose_name='hot_time_end_b')),
                ('field_worker_lunch_time_start', models.TimeField(null=True, verbose_name='field_worker_lunch_time_start')),
                ('field_worker_lunch_time_end', models.TimeField(null=True, verbose_name='field_worker_lunch_time_end')),
                ('shift_change_time_start', models.TimeField(null=True, verbose_name='shift_change_time_start')),
                ('shift_change_time_end', models.TimeField(null=True, verbose_name='shift_change_time_end')),
            ],
            options={
                'db_table': 'shiftpattern_worker_view',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Member_tb',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('member_id', models.CharField(max_length=10, primary_key=True, serialize=False, verbose_name='member_id')),
                ('name', models.CharField(max_length=20, verbose_name='name')),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RunPython(set_initial_password),  # カスタムマイグレーション関数の追加
        migrations.CreateModel(
            name='Affilation_tb',
            fields=[
                ('affilation_id', models.AutoField(primary_key=True, serialize=False, verbose_name='affilation_id')),
                ('affilation', models.CharField(max_length=20, unique=True, verbose_name='affilation')),
            ],
        ),
        migrations.CreateModel(
            name='Check_tb',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('inspection_no', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='inspection_no')),
                ('wark_name', models.CharField(max_length=100, null=True, verbose_name='wark_name')),
                ('man_hours', models.IntegerField(blank=True, default=1, null=True, verbose_name='man_hours')),
                ('day_of_week', models.CharField(blank=True, max_length=5, null=True, verbose_name='day_of_week')),
                ('time_zone', models.CharField(blank=True, max_length=3, null=True, verbose_name='time_zone')),
                ('status', models.CharField(choices=[('', ''), ('メーカ', 'メーカ'), ('自動化', '自動化'), ('日常点検', '日常点検'), ('廃止', '廃止'), ('差戻し', '差戻し')], default='', max_length=20, verbose_name='status')),
                ('registration', models.DateField(null=True, verbose_name='registration')),
                ('last_updated', models.DateField(null=True, verbose_name='last_updated')),
            ],
        ),
        migrations.CreateModel(
            name='Field_worker_tb',
            fields=[
                ('pattern_id', models.AutoField(primary_key=True, serialize=False, verbose_name='pattern_id')),
                ('pattern_name', models.CharField(max_length=20, verbose_name='pattern_name')),
                ('start_time', models.TimeField(null=True, verbose_name='start_time')),
                ('end_time', models.TimeField(null=True, verbose_name='end_time')),
                ('hot_time_morning_start', models.TimeField(null=True, verbose_name='hot_time_morning_start')),
                ('hot_time_morning_end', models.TimeField(null=True, verbose_name='hot_time_morning_end')),
                ('hot_time_afternoon_start', models.TimeField(null=True, verbose_name='hot_time_afternoon_start')),
                ('hot_time_afternoon_end', models.TimeField(null=True, verbose_name='hot_time_afternoon_end')),
                ('lunch_break_start', models.TimeField(null=True, verbose_name='lunch_break_start')),
                ('lunch_break_end', models.TimeField(null=True, verbose_name='lunch_break_end')),
                ('hot_time_last_start', models.TimeField(null=True, verbose_name='hot_time_last_start')),
                ('hot_time_last_end', models.TimeField(null=True, verbose_name='hot_time_last_end')),
            ],
        ),
        migrations.CreateModel(
            name='Hozen_calendar_tb',
            fields=[
                ('h_id', models.AutoField(primary_key=True, serialize=False, verbose_name='h_id')),
                ('h_date', models.DateField(null=True, unique=True, verbose_name='h_date')),
                ('h_day_of_week', models.CharField(max_length=2, null=True, verbose_name='h_day_of_week')),
                ('h_month', models.IntegerField(verbose_name='h_month')),
                ('h_week', models.IntegerField(verbose_name='h_week')),
                ('date_alias', models.CharField(blank=True, max_length=10, null=True, verbose_name='date_alias')),
            ],
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='affilation_id')),
                ('organization', models.CharField(max_length=10, unique=True, verbose_name='oraganization')),
                ('organization_name', models.CharField(max_length=10, verbose_name='oraganization_name')),
            ],
        ),
        migrations.CreateModel(
            name='Plan_tb',
            fields=[
                ('plan_id', models.AutoField(primary_key=True, serialize=False, verbose_name='plan_id')),
                ('plan_time', models.DateTimeField(null=True, verbose_name='plan_time')),
                ('implementation_date', models.DateField(null=True, verbose_name='implementation_date')),
                ('result_man_hours', models.IntegerField(blank=True, null=True, verbose_name='man_hours')),
                ('result', models.CharField(blank=True, max_length=20, null=True, verbose_name='result')),
                ('points_to_note', models.CharField(blank=True, max_length=500, null=True, verbose_name='points_to_pointed_out')),
                ('status', models.CharField(choices=[('配布待ち', '配布待ち'), ('実施待ち', '実施待ち'), ('承認待ち', '承認待ち'), ('完了', '完了'), ('差戻し', '差戻し'), ('遅れ', '遅れ')], default='配布待ち', max_length=20, verbose_name='status')),
                ('comment', models.CharField(blank=True, max_length=300, null=True, verbose_name='comment')),
                ('applicant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='applied_plans', to=settings.AUTH_USER_MODEL)),
                ('approver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approved_plans', to=settings.AUTH_USER_MODEL)),
                ('holder', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='holder_plans', to=settings.AUTH_USER_MODEL)),
                ('inspection_no', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='plans', to='myapp.check_tb')),
                ('p_date', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='plans_by_date', to='myapp.hozen_calendar_tb')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ShiftPattan_tb',
            fields=[
                ('pattern_id', models.AutoField(primary_key=True, serialize=False, verbose_name='pattern_id')),
                ('pattern_name', models.CharField(max_length=20, verbose_name='pattern_name')),
                ('start_time', models.TimeField(null=True, verbose_name='start_time')),
                ('end_time', models.TimeField(null=True, verbose_name='end_time')),
                ('lunch_time_start', models.TimeField(null=True, verbose_name='lunch_time_start')),
                ('lunch_time_end', models.TimeField(null=True, verbose_name='lunch_time_end')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('login_number', models.CharField(max_length=10, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='WeeklyDuty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('配布待ち', '配布待ち'), ('実施待ち', '実施待ち'), ('承認待ち', '承認待ち'), ('完了', '完了'), ('差戻し', '差戻し'), ('遅れ', '遅れ')], default='配布待ち', max_length=20, verbose_name='status')),
                ('this_week', models.BooleanField(default=False, verbose_name='this_week')),
                ('affilation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='weekly_duties', to='myapp.affilation_tb')),
                ('plan', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='weekly_duties', to='myapp.plan_tb')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='affilation_id')),
                ('qualification', models.CharField(max_length=5, verbose_name='qualification')),
                ('job_title', models.CharField(max_length=5, verbose_name='job_title')),
                ('belongs', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_profiles', to='myapp.affilation_tb')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.organization')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Practitioner_tb',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('member_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='practitioners', to=settings.AUTH_USER_MODEL)),
                ('plan_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='practitioners', to='myapp.plan_tb')),
            ],
        ),
        migrations.CreateModel(
            name='PlanApproval',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('holder', 'Holder'), ('applicant', 'Applicant'), ('approver', 'Approver')], max_length=20)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plan_approvals', to=settings.AUTH_USER_MODEL)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='approvals', to='myapp.plan_tb')),
            ],
        ),
        migrations.CreateModel(
            name='Linename_tb',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('line_name', models.CharField(max_length=50, unique=True, verbose_name='line_name')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='linenames', to='myapp.organization')),
            ],
        ),
        migrations.CreateModel(
            name='Db_details_tb',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('applicable_device', models.CharField(blank=True, max_length=100, null=True, verbose_name='applicable_device')),
                ('method', models.CharField(blank=True, max_length=50, null=True, verbose_name='method')),
                ('contents', models.CharField(blank=True, max_length=200, null=True, verbose_name='contents')),
                ('standard', models.CharField(blank=True, max_length=200, null=True, verbose_name='standard')),
                ('remarks', models.CharField(blank=True, max_length=200, null=True, verbose_name='remarks')),
                ('inspection_man_hours', models.IntegerField(blank=True, default=1, null=True, verbose_name='inspection_man_hours')),
                ('inspection_no', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='db_details', to='myapp.check_tb')),
            ],
        ),
        migrations.CreateModel(
            name='Control_tb',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('control_no', models.CharField(blank=True, max_length=20, unique=True, verbose_name='control_no')),
                ('machine', models.CharField(blank=True, max_length=40, null=True, verbose_name='machine')),
                ('criterion_link', models.URLField(blank=True, null=True, verbose_name='criterion_link')),
                ('line_name', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='linenames', to='myapp.linename_tb')),
            ],
        ),
        migrations.AddField(
            model_name='check_tb',
            name='control_no',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='checks', to='myapp.control_tb'),
        ),
        migrations.AddField(
            model_name='check_tb',
            name='practitioner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='practitioners', to='myapp.shiftpattan_tb'),
        ),
        migrations.CreateModel(
            name='Calendar_tb',
            fields=[
                ('c_id', models.AutoField(primary_key=True, serialize=False, verbose_name='c_id')),
                ('affilation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calendars', to='myapp.affilation_tb')),
                ('c_date', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='calendars', to='myapp.hozen_calendar_tb')),
                ('pattern', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calendars', to='myapp.shiftpattan_tb')),
            ],
        ),
    ]
